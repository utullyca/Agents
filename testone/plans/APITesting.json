{
  "name": "APITesting",
  "version": "1.0.0",
  "description": "Comprehensive API testing with validation, performance, and security checks",
  "steps": [
    {
      "id": "load_api_config",
      "name": "Load API Configuration",
      "type": "configuration",
      "config": {
        "config_file": "api_endpoints.yaml",
        "environment": "staging",
        "validate_schema": true
      },
      "timeout": 30
    },
    {
      "id": "setup_test_data",
      "name": "Setup Test Data",
      "type": "data_setup",
      "config": {
        "test_users": [
          {
            "id": "test_user_1",
            "email": "test1@example.com",
            "role": "user"
          },
          {
            "id": "test_user_2",
            "email": "test2@example.com",
            "role": "admin"
          }
        ],
        "test_products": [
          {
            "id": "product_1",
            "name": "Test Product 1",
            "price": 99.99
          }
        ],
        "cleanup_after": true
      },
      "timeout": 60
    },
    {
      "id": "test_authentication",
      "name": "Test Authentication Endpoints",
      "type": "api_test",
      "config": {
        "endpoints": [
          {
            "name": "login_success",
            "url": "https://api.example.com/auth/login",
            "method": "POST",
            "headers": {
              "Content-Type": "application/json"
            },
            "body": {
              "email": "test1@example.com",
              "password": "test_password"
            },
            "expected_status": 200,
            "expected_response": {
              "token": "string",
              "user_id": "string"
            },
            "assertions": [
              {
                "name": "token_present",
                "path": "$.token",
                "type": "not_null"
              },
              {
                "name": "token_format",
                "path": "$.token",
                "type": "regex",
                "pattern": "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$"
              }
            ]
          },
          {
            "name": "login_invalid_credentials",
            "url": "https://api.example.com/auth/login",
            "method": "POST",
            "body": {
              "email": "invalid@example.com",
              "password": "wrong_password"
            },
            "expected_status": 401,
            "expected_response": {
              "error": "Invalid credentials"
            }
          }
        ],
        "parallel_execution": true,
        "max_concurrent": 3
      },
      "timeout": 120,
      "retry": {
        "max_attempts": 2,
        "delay": 5
      }
    },
    {
      "id": "test_user_endpoints",
      "name": "Test User Management Endpoints",
      "type": "api_test",
      "config": {
        "auth_token": "${login_success.token}",
        "endpoints": [
          {
            "name": "get_user_profile",
            "url": "https://api.example.com/users/profile",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer ${auth_token}"
            },
            "expected_status": 200,
            "expected_response": {
              "id": "string",
              "email": "string",
              "name": "string"
            }
          },
          {
            "name": "update_user_profile",
            "url": "https://api.example.com/users/profile",
            "method": "PUT",
            "headers": {
              "Authorization": "Bearer ${auth_token}",
              "Content-Type": "application/json"
            },
            "body": {
              "name": "Updated Test User"
            },
            "expected_status": 200,
            "expected_response": {
              "id": "string",
              "name": "Updated Test User"
            }
          },
          {
            "name": "get_users_list",
            "url": "https://api.example.com/users",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer ${auth_token}"
            },
            "expected_status": 200,
            "expected_response": {
              "users": "array",
              "total": "number"
            },
            "assertions": [
              {
                "name": "users_array_not_empty",
                "path": "$.users",
                "type": "array_length",
                "min_length": 1
              }
            ]
          }
        ]
      },
      "timeout": 180
    },
    {
      "id": "test_product_endpoints",
      "name": "Test Product Management Endpoints",
      "type": "api_test",
      "config": {
        "endpoints": [
          {
            "name": "create_product",
            "url": "https://api.example.com/products",
            "method": "POST",
            "headers": {
              "Authorization": "Bearer ${auth_token}",
              "Content-Type": "application/json"
            },
            "body": {
              "name": "New Test Product",
              "price": 149.99,
              "description": "A test product for API testing"
            },
            "expected_status": 201,
            "expected_response": {
              "id": "string",
              "name": "New Test Product",
              "price": 149.99
            }
          },
          {
            "name": "get_product",
            "url": "https://api.example.com/products/${create_product.id}",
            "method": "GET",
            "expected_status": 200,
            "expected_response": {
              "id": "string",
              "name": "string",
              "price": "number"
            }
          },
          {
            "name": "update_product",
            "url": "https://api.example.com/products/${create_product.id}",
            "method": "PUT",
            "headers": {
              "Authorization": "Bearer ${auth_token}",
              "Content-Type": "application/json"
            },
            "body": {
              "price": 199.99
            },
            "expected_status": 200,
            "expected_response": {
              "price": 199.99
            }
          },
          {
            "name": "delete_product",
            "url": "https://api.example.com/products/${create_product.id}",
            "method": "DELETE",
            "headers": {
              "Authorization": "Bearer ${auth_token}"
            },
            "expected_status": 204
          }
        ]
      },
      "timeout": 240
    },
    {
      "id": "performance_testing",
      "name": "Performance Testing",
      "type": "performance_test",
      "config": {
        "load_test": {
          "endpoint": "https://api.example.com/users",
          "method": "GET",
          "headers": {
            "Authorization": "Bearer ${auth_token}"
          },
          "concurrent_users": 50,
          "duration": "2m",
          "ramp_up": "30s"
        },
        "performance_criteria": {
          "max_response_time": "500ms",
          "max_error_rate": "1%",
          "min_throughput": "100 requests/second"
        }
      },
      "timeout": 300
    },
    {
      "id": "security_testing",
      "name": "Security Testing",
      "type": "security_test",
      "config": {
        "tests": [
          {
            "name": "sql_injection_test",
            "endpoint": "https://api.example.com/users/search",
            "method": "GET",
            "payloads": [
              "'; DROP TABLE users; --",
              "' OR '1'='1",
              "'; SELECT * FROM users; --"
            ],
            "expected_behavior": "reject_or_sanitize"
          },
          {
            "name": "xss_test",
            "endpoint": "https://api.example.com/users/profile",
            "method": "PUT",
            "payloads": [
              "<script>alert('xss')</script>",
              "javascript:alert('xss')",
              "<img src=x onerror=alert('xss')>"
            ],
            "expected_behavior": "reject_or_sanitize"
          },
          {
            "name": "authentication_bypass",
            "endpoint": "https://api.example.com/admin/users",
            "method": "GET",
            "headers": {
              "Authorization": "Bearer invalid_token"
            },
            "expected_status": 401
          }
        ]
      },
      "timeout": 180
    },
    {
      "id": "generate_test_report",
      "name": "Generate Test Report",
      "type": "reporting",
      "config": {
        "template": "api_test_report.html",
        "output_path": "api_test_report.html",
        "include_metrics": {
          "response_times": true,
          "error_rates": true,
          "throughput": true,
          "security_results": true
        },
        "charts": [
          "response_time_distribution",
          "error_rate_timeline",
          "throughput_graph"
        ]
      },
      "timeout": 60
    }
  ],
  "error_handling": {
    "on_failure": "continue",
    "log_errors": true,
    "notify_on_error": true,
    "cleanup_on_error": true
  },
  "outputs": {
    "test_results": "api_test_results.json",
    "performance_report": "performance_report.json",
    "security_report": "security_report.json",
    "html_report": "api_test_report.html"
  },
  "environment_variables": {
    "API_BASE_URL": "required",
    "TEST_USER_EMAIL": "required",
    "TEST_USER_PASSWORD": "required"
  }
}
