{
  "name": "RegressionTesting",
  "version": "1.0.0",
  "description": "Automated regression testing with baseline comparison and change detection",
  "steps": [
    {
      "id": "load_baseline_data",
      "name": "Load Baseline Data",
      "type": "baseline_loading",
      "config": {
        "baseline_file": "baselines/regression_baseline.json",
        "baseline_version": "1.2.0",
        "validate_baseline": true
      },
      "timeout": 60
    },
    {
      "id": "setup_test_environment",
      "name": "Setup Test Environment",
      "type": "environment_setup",
      "config": {
        "environment": "staging",
        "database": {
          "type": "postgresql",
          "connection": "postgresql://test:test@localhost/testdb",
          "reset_data": true,
          "seed_data": "test_data/regression_seed.sql"
        },
        "services": [
          {
            "name": "api_service",
            "url": "https://staging-api.example.com",
            "health_check": "/health"
          },
          {
            "name": "web_service",
            "url": "https://staging-web.example.com",
            "health_check": "/"
          }
        ],
        "cleanup_after": true
      },
      "timeout": 120
    },
    {
      "id": "execute_functional_tests",
      "name": "Execute Functional Tests",
      "type": "functional_testing",
      "config": {
        "test_suites": [
          {
            "name": "user_management_tests",
            "tests": [
              {
                "name": "user_registration",
                "endpoint": "/api/users/register",
                "method": "POST",
                "payload": {
                  "email": "test@example.com",
                  "password": "testpassword",
                  "name": "Test User"
                },
                "expected_status": 201,
                "expected_response": {
                  "user_id": "string",
                  "email": "test@example.com"
                },
                "baseline_key": "user_registration_response"
              },
              {
                "name": "user_login",
                "endpoint": "/api/users/login",
                "method": "POST",
                "payload": {
                  "email": "test@example.com",
                  "password": "testpassword"
                },
                "expected_status": 200,
                "expected_response": {
                  "token": "string",
                  "user_id": "string"
                },
                "baseline_key": "user_login_response"
              },
              {
                "name": "get_user_profile",
                "endpoint": "/api/users/profile",
                "method": "GET",
                "headers": {
                  "Authorization": "Bearer ${user_login.token}"
                },
                "expected_status": 200,
                "expected_response": {
                  "id": "string",
                  "email": "test@example.com",
                  "name": "Test User"
                },
                "baseline_key": "user_profile_response"
              }
            ]
          },
          {
            "name": "product_management_tests",
            "tests": [
              {
                "name": "create_product",
                "endpoint": "/api/products",
                "method": "POST",
                "headers": {
                  "Authorization": "Bearer ${user_login.token}",
                  "Content-Type": "application/json"
                },
                "payload": {
                  "name": "Test Product",
                  "price": 99.99,
                  "description": "A test product"
                },
                "expected_status": 201,
                "expected_response": {
                  "product_id": "string",
                  "name": "Test Product",
                  "price": 99.99
                },
                "baseline_key": "create_product_response"
              },
              {
                "name": "get_product_list",
                "endpoint": "/api/products",
                "method": "GET",
                "expected_status": 200,
                "expected_response": {
                  "products": "array",
                  "total": "number"
                },
                "baseline_key": "product_list_response"
              }
            ]
          }
        ],
        "parallel_execution": true,
        "max_concurrent": 5
      },
      "timeout": 300,
      "retry": {
        "max_attempts": 2,
        "delay": 10
      }
    },
    {
      "id": "execute_performance_tests",
      "name": "Execute Performance Tests",
      "type": "performance_testing",
      "config": {
        "performance_tests": [
          {
            "name": "api_response_time",
            "endpoint": "/api/users",
            "method": "GET",
            "load_config": {
              "concurrent_users": 10,
              "duration": "1m",
              "ramp_up": "10s"
            },
            "baseline_metrics": {
              "avg_response_time": "200ms",
              "p95_response_time": "500ms",
              "error_rate": "0.1%"
            }
          },
          {
            "name": "database_query_performance",
            "query": "SELECT * FROM users WHERE email = 'test@example.com'",
            "baseline_metrics": {
              "execution_time": "50ms",
              "rows_returned": 1
            }
          }
        ]
      },
      "timeout": 240
    },
    {
      "id": "execute_ui_tests",
      "name": "Execute UI Tests",
      "type": "ui_testing",
      "config": {
        "browser": "chrome",
        "headless": true,
        "viewport": {
          "width": 1920,
          "height": 1080
        },
        "tests": [
          {
            "name": "homepage_load",
            "url": "https://staging-web.example.com",
            "actions": [
              {
                "type": "wait_for_element",
                "selector": "h1",
                "timeout": 10
              },
              {
                "type": "assert_text",
                "selector": "h1",
                "expected_text": "Welcome to Example App"
              }
            ],
            "baseline_key": "homepage_content"
          },
          {
            "name": "user_login_flow",
            "url": "https://staging-web.example.com/login",
            "actions": [
              {
                "type": "fill_input",
                "selector": "#email",
                "value": "test@example.com"
              },
              {
                "type": "fill_input",
                "selector": "#password",
                "value": "testpassword"
              },
              {
                "type": "click",
                "selector": "#login-button"
              },
              {
                "type": "wait_for_navigation",
                "timeout": 10
              },
              {
                "type": "assert_url",
                "expected_url": "https://staging-web.example.com/dashboard"
              }
            ],
            "baseline_key": "login_flow"
          }
        ]
      },
      "timeout": 180
    },
    {
      "id": "compare_with_baseline",
      "name": "Compare with Baseline",
      "type": "baseline_comparison",
      "config": {
        "comparison_rules": [
          {
            "name": "response_structure",
            "type": "json_structure",
            "tolerance": "exact_match"
          },
          {
            "name": "response_timing",
            "type": "performance",
            "tolerance": {
              "avg_response_time": "±20%",
              "p95_response_time": "±30%"
            }
          },
          {
            "name": "ui_content",
            "type": "content",
            "tolerance": "exact_match"
          },
          {
            "name": "database_results",
            "type": "data_comparison",
            "tolerance": "exact_match"
          }
        ],
        "ignore_fields": ["timestamp", "id", "created_at", "updated_at"]
      },
      "timeout": 120
    },
    {
      "id": "detect_regressions",
      "name": "Detect Regressions",
      "type": "regression_detection",
      "config": {
        "regression_rules": [
          {
            "name": "functional_regression",
            "condition": "test_status == 'failed'",
            "severity": "critical"
          },
          {
            "name": "performance_regression",
            "condition": "response_time > baseline_response_time * 1.5",
            "severity": "high"
          },
          {
            "name": "ui_regression",
            "condition": "ui_content != baseline_ui_content",
            "severity": "medium"
          },
          {
            "name": "data_regression",
            "condition": "data_count != baseline_data_count",
            "severity": "high"
          }
        ],
        "notification": {
          "email": true,
          "slack": true,
          "jira": true
        }
      },
      "timeout": 90
    },
    {
      "id": "generate_regression_report",
      "name": "Generate Regression Report",
      "type": "reporting",
      "config": {
        "template": "regression_test_report.html",
        "output_path": "regression_report.html",
        "include_sections": {
          "summary": true,
          "test_results": true,
          "baseline_comparison": true,
          "regressions": true,
          "performance_metrics": true,
          "recommendations": true
        },
        "charts": [
          "test_results_pie",
          "performance_comparison_bar",
          "regression_timeline"
        ]
      },
      "timeout": 60
    }
  ],
  "error_handling": {
    "on_failure": "continue",
    "log_errors": true,
    "notify_on_error": true,
    "cleanup_on_error": true
  },
  "outputs": {
    "test_results": "regression_test_results.json",
    "baseline_comparison": "baseline_comparison.json",
    "regression_report": "regression_report.json",
    "html_report": "regression_report.html"
  },
  "environment_variables": {
    "STAGING_API_URL": "required",
    "STAGING_WEB_URL": "required",
    "TEST_DATABASE_URL": "required"
  },
  "scheduling": {
    "frequency": "daily",
    "time": "02:00",
    "timezone": "UTC"
  }
}
